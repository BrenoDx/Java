/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import data.Conexao;
import data.Filme;
import data.FilmeDAO;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.sql.Date;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.sql.SQLException;

/**
 *
 * @author breno
 */

/**
 * Classe responsável pela interface gráfica de cadastro de filmes no sistema
 * CenaFlix.
 */
public class TelaCenaFlix extends javax.swing.JFrame {

    /**
     * Construtor da classe TelaCenaFlix. Inicializa os componentes da interface
     * e desativa os botões de exclusão e edição.
     */
    public TelaCenaFlix() {
        initComponents();
        BtExcluir.setEnabled(false);
        BtEditar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TxNome = new javax.swing.JTextField();
        TxCategoria = new javax.swing.JTextField();
        TxData = new javax.swing.JFormattedTextField();
        BtCadastrar = new javax.swing.JButton();
        BtLimpar = new javax.swing.JButton();
        BtCatalogo = new javax.swing.JButton();
        BtExcluir = new javax.swing.JButton();
        TxId = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        BtPesquisa = new javax.swing.JButton();
        BtEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("CENAFLIX");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("CADASTRO DE FILME");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Nome do Filme:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Data de Lançamento:");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Categoria:");

        TxCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxCategoriaActionPerformed(evt);
            }
        });

        try {
            TxData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        BtCadastrar.setText("Cadastrar");
        BtCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCadastrarActionPerformed(evt);
            }
        });

        BtLimpar.setText("Limpar");
        BtLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtLimparActionPerformed(evt);
            }
        });

        BtCatalogo.setText("Catalogo");
        BtCatalogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCatalogoActionPerformed(evt);
            }
        });

        BtExcluir.setText("Excluir");
        BtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtExcluirActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Pesquisa por ID:");

        BtPesquisa.setText("Pesquisar");
        BtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtPesquisaActionPerformed(evt);
            }
        });

        BtEditar.setText("Editar");
        BtEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtCatalogo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtCadastrar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(TxNome, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(TxData, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                        .addComponent(TxCategoria, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(TxId, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(BtPesquisa)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(BtLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(159, 159, 159)
                                .addComponent(jLabel1)))
                        .addGap(0, 25, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(BtPesquisa)
                    .addComponent(BtLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtCadastrar)
                            .addComponent(BtCatalogo)
                            .addComponent(BtExcluir)
                            .addComponent(BtEditar)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(TxNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(TxData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(TxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TxCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxCategoriaActionPerformed

    /**
     * Ação do botão "Limpar". Limpa todos os campos de entrada e redefine os
     * botões para o estado inicial.
     */
    private void BtLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtLimparActionPerformed
        TxId.setText("");
        TxNome.setText("");
        TxData.setText("");
        TxCategoria.setText("");
        BtCadastrar.setEnabled(true);
        BtExcluir.setEnabled(false);
        BtEditar.setEnabled(false);
    }//GEN-LAST:event_BtLimparActionPerformed

    /**
     * Ação do botão "Cadastrar". Valida e insere um novo filme no banco de
     * dados.
     */
    private void BtCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCadastrarActionPerformed
        Filme filme = new Filme();
        FilmeDAO dao = new FilmeDAO();
        Conexao conector = new Conexao();
        Connection status;
        int resposta;

        status = conector.conectar();
        if (status != null) {
            if (emptyFields() != true) {
                try {
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");

                    String textoData = TxData.getText();
                    LocalDate localDate = LocalDate.parse(textoData, formatter);

                    Date sqlData = Date.valueOf(localDate);

                    filme.setNome(TxNome.getText());
                    filme.setData(sqlData);
                    filme.setCategoria(TxCategoria.getText());

                    resposta = dao.salvar(filme);
                    if (resposta == 1) {
                        JOptionPane.showMessageDialog(rootPane, "Dados incluidos com sucesso");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Erro: ao tentar inserir");
                    }
                } catch (DateTimeParseException e) {
                    JOptionPane.showMessageDialog(rootPane, "Erro: A Data inserida está em um formato inválido!" + e.getMessage());
                }
            }
        }
        TxNome.setText("");
        TxData.setText("");
        TxCategoria.setText("");
        conector.desconectar();

    }//GEN-LAST:event_BtCadastrarActionPerformed

    /**
     * Ação do botão "Excluir". Exclui um filme do banco de dados com base no ID
     * informado.
     */
    private void BtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtExcluirActionPerformed
        FilmeDAO dao = new FilmeDAO();
        Conexao c = new Conexao();
        boolean status;
        int id = Integer.parseInt(TxId.getText());

        if (c.conectar() != null) {
            int resultado = JOptionPane.showConfirmDialog(null, "Deseja Excluir o filme do catalogo?", "Confirmação", JOptionPane.YES_NO_OPTION);
            if (resultado == JOptionPane.YES_OPTION) {
                status = dao.excluir(id);
                JOptionPane.showMessageDialog(rootPane, "Filme excluido com sucesso!");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Operação cancelada");
            }
        }
        c.desconectar();
        TxId.setText("");
        TxNome.setText("");
        TxData.setText("");
        TxCategoria.setText("");
        BtExcluir.setEnabled(false);
        BtEditar.setEnabled(false);
        BtCadastrar.setEnabled(true);

    }//GEN-LAST:event_BtExcluirActionPerformed

    /**
     * Ação do botão "Pesquisar". Realiza a pesquisa de um filme pelo ID e exibe
     * os dados nos campos correspondentes. Deixa os botões "Excluir" e "Editar"
     * executaveis e bloqueia o botão "Cadastrar".
     */
    private void BtPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtPesquisaActionPerformed
        FilmeDAO dao = new FilmeDAO();
        Conexao c = new Conexao();

        try {
            int id = Integer.parseInt(TxId.getText());

            if (c.conectar() != null) {
                Filme filme = dao.consultar(id);
                if (filme != null) {
                    TxNome.setText(filme.getNome());
                    SimpleDateFormat data = new SimpleDateFormat("dd/MM/yyyy");
                    String dataTexto = data.format(filme.getData());
                    TxData.setText(dataTexto);
                    TxCategoria.setText(filme.getCategoria());
                    BtExcluir.setEnabled(true);
                    BtEditar.setEnabled(true);
                    BtCadastrar.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "ID não encontrado!");
                }
            }
            c.desconectar();
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(rootPane, "Informe um NÚMERO no campo ID!");
        }
    }//GEN-LAST:event_BtPesquisaActionPerformed

    /**
     * Ação do botão "Editar". Atualiza os dados do filme selecionado no banco
     * de dados.
     */
    private void BtEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtEditarActionPerformed
        FilmeDAO dao;
        Filme filme = new Filme();
        Conexao c = new Conexao();
        int resposta;

        int id = Integer.parseInt(TxId.getText());
        DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String textoData = TxData.getText();
        LocalDate data = LocalDate.parse(textoData, formato);
        Date sqlData = Date.valueOf(data);

        filme.setId(id);
        filme.setNome(TxNome.getText());
        filme.setData(sqlData);
        filme.setCategoria(TxCategoria.getText());
        dao = new FilmeDAO();

        if (emptyFields() != true) {
            if (c.conectar() == null) {
                JOptionPane.showMessageDialog(rootPane, "Erro de conexão!");
            } else {
                resposta = dao.atualizar(filme);
                if (resposta == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Dados atualizados com sucesso!");
                    TxId.setText("");
                    TxNome.setText("");
                    TxData.setText("");
                    TxCategoria.setText("");
                    BtExcluir.setEnabled(false);
                    BtEditar.setEnabled(false);
                    BtCadastrar.setEnabled(true);
                }
            }
        }
        c.desconectar();
    }//GEN-LAST:event_BtEditarActionPerformed

    /**
     * Ação do botão "Catálogo". Abre a tela de visualização do catálogo de
     * filmes.
     */
    private void BtCatalogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCatalogoActionPerformed
        Catalogo tela = new Catalogo();
        tela.setVisible(true);
    }//GEN-LAST:event_BtCatalogoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCenaFlix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCenaFlix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCenaFlix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCenaFlix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCenaFlix().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtCadastrar;
    private javax.swing.JButton BtCatalogo;
    private javax.swing.JButton BtEditar;
    private javax.swing.JButton BtExcluir;
    private javax.swing.JButton BtLimpar;
    private javax.swing.JButton BtPesquisa;
    private javax.swing.JTextField TxCategoria;
    private javax.swing.JFormattedTextField TxData;
    private javax.swing.JTextField TxId;
    private javax.swing.JTextField TxNome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    /**
     * Método para checar se os campos estão vazios.
     */
    public boolean emptyFields() {
        boolean status = true;
        if (TxNome.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Campo Filme não pode ficar vazio!");
            return status;
        } else if (TxData.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Campo Data não pode ficar vazio!");
            return status;
        } else if (TxCategoria.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Campo Categoria não pode ficar vazio!");
            return status;
        } else {
            status = false;
            return status;
        }
    }
}
